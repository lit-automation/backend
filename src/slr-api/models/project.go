// Code generated by goagen v1.4.1, DO NOT EDIT.
//
// API "SLR Automation": Models
//
// Command:
// $ goagen
// --design=github.com/wimspaargaren/slr-automation/src/slr-api/design
// --out=$(GOPATH)/src/github.com/wimspaargaren/slr-automation/src/slr-api
// --version=v1.4.3

package models

import (
	"context"
	"time"

	uuid "github.com/gofrs/uuid"
	"github.com/jinzhu/gorm"
	"github.com/wimspaargaren/slr-automation/src/slr-api/app"
)

// Project model represents an SLR project
type Project struct {
	ID           uuid.UUID `sql:"type:uuid;default:uuid_generate_v4()" gorm:"primary_key"` // primary key
	Articles     []Article // has many Articles
	CreatedAt    time.Time
	DeletedAt    *time.Time
	Name         string
	ScrapeState  []byte `sql:"type:jsonb"`
	SearchString string
	Status       ProjectStatus `sql:"type:smallint"` // enum ProjectStatus
	UpdatedAt    time.Time
	UserID       uuid.UUID `sql:"type:uuid" gorm:"index:idx_project_user_id"` // has many Project
}

// TableName overrides the table name settings in Gorm to force a specific table name
// in the database.
func (m Project) TableName() string {
	return "projects"

}

// ProjectDB is the implementation of the storage interface for
// Project.
type ProjectDB struct {
	Db *gorm.DB
}

// NewProjectDB creates a new storage type.
func NewProjectDB(db *gorm.DB) *ProjectDB {
	return &ProjectDB{Db: db}
}

// DB returns the underlying database.
func (m *ProjectDB) DB() interface{} {
	return m.Db
}

// ProjectStorage represents the storage interface.
type ProjectStorage interface {
	DB() interface{}
	List(ctx context.Context) ([]*Project, error)
	Get(ctx context.Context, id uuid.UUID) (*Project, error)
	Add(ctx context.Context, project *Project) error
	Update(ctx context.Context, project *Project) error
	Delete(ctx context.Context, id uuid.UUID) error

	ListProject(ctx context.Context) []*app.Project
	OneProject(ctx context.Context, id uuid.UUID) (*app.Project, error)
}

// TableName overrides the table name settings in Gorm to force a specific table name
// in the database.
func (m *ProjectDB) TableName() string {
	return "projects"

}
